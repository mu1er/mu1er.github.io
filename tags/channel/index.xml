<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Channel on Auuu Nya Blog</title>
    <link>https://mu1er.github.io/tags/channel/</link>
    <description>Recent content in Channel on Auuu Nya Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-an</language>
    <lastBuildDate>Thu, 09 Apr 2020 23:59:15 +0800</lastBuildDate>
    
	<atom:link href="https://mu1er.github.io/tags/channel/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Django使用Websocket,Channel初体验</title>
      <link>https://mu1er.github.io/post/django%E4%BD%BF%E7%94%A8websocketchannel%E5%88%9D%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Thu, 09 Apr 2020 23:59:15 +0800</pubDate>
      
      <guid>https://mu1er.github.io/post/django%E4%BD%BF%E7%94%A8websocketchannel%E5%88%9D%E4%BD%93%E9%AA%8C/</guid>
      <description>很久都没更新文章了，最近恰好在做了一个服务端主动推送消息给客户端的需求，因为是第一次使用Channels模块，踩了不少坑，在这里记录一下。
什么是Websocket websocket的介绍 WebSocket-阮一峰老师 通俗的来说Websocket就是一个双向通道，客户端可以主动给服务端发消息，服务端也可以主动给客户端发送消息。
Channels是Django里面可以构建websocket的模块，官方文档里说了很清晰了，就是一个以处理WebSocket，聊天协议，IoT协议的模块，基于称为ASGI的Python规范构建。它可以以异步的方式进行。
安装配置 python2: pip install -U channels python3: pip3 install -U channels # 添加到yourproject.settings INSTALLED_APPS = ( &amp;#39;django.</description>
    </item>
    
  </channel>
</rss>