<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Auuu Nya Blog</title>
    <link>https://auuunya.github.io/tags/golang/</link>
    <description>Recent content in golang on Auuu Nya Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-an</language>
    <copyright>© Copyright AuuuNya</copyright>
    <lastBuildDate>Sat, 09 Jun 2018 13:01:06 +0800</lastBuildDate><atom:link href="https://auuunya.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>用Go编写封装自己的日志模块</title>
      <link>https://auuunya.github.io/post/2018-06-09-%E7%94%A8go%E7%BC%96%E5%86%99%E5%B0%81%E8%A3%85%E8%87%AA%E5%B7%B1%E7%9A%84%E6%97%A5%E5%BF%97%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Sat, 09 Jun 2018 13:01:06 +0800</pubDate>
      
      <guid>https://auuunya.github.io/post/2018-06-09-%E7%94%A8go%E7%BC%96%E5%86%99%E5%B0%81%E8%A3%85%E8%87%AA%E5%B7%B1%E7%9A%84%E6%97%A5%E5%BF%97%E6%A8%A1%E5%9D%97/</guid>
      <description>&lt;p&gt;今天为大家带来一篇用Go如何封装自己的日志模块。orz~&lt;/p&gt;
&lt;p&gt;既然是日志模块，第一步肯定是定义日志级别，不然什么消息都打印，对资源消耗很大。
这里使用&lt;code&gt;iota&lt;/code&gt;常量计数器定义了四个级别,使用iota能简化定义，在定义枚举时很有用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang生成静态页面文件</title>
      <link>https://auuunya.github.io/post/2018-05-09-golang%E7%94%9F%E6%88%90%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 09 May 2018 12:10:56 +0800</pubDate>
      
      <guid>https://auuunya.github.io/post/2018-05-09-golang%E7%94%9F%E6%88%90%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;p&gt;最近要在dingo添加一个功能，就是一键导出文章静态页面，在网上搜了很多，也请教了很多人，不过碍于自己的技术太菜听不怎么太明白，后来搜到一片文章，借用此篇文章和自己的一些测试终究是完成了这个功能。
文章作者写的生成器git地址:&lt;a href=&#34;https://github.com/zupzup/blog-generator&#34;&gt;blog-generator&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang生成SSL证书以及服务器私钥</title>
      <link>https://auuunya.github.io/post/2018-04-20-golang%E7%94%9F%E6%88%90ssl%E8%AF%81%E4%B9%A6%E4%BB%A5%E5%8F%8A%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%A7%81%E9%92%A5/</link>
      <pubDate>Fri, 20 Apr 2018 11:20:36 +0800</pubDate>
      
      <guid>https://auuunya.github.io/post/2018-04-20-golang%E7%94%9F%E6%88%90ssl%E8%AF%81%E4%B9%A6%E4%BB%A5%E5%8F%8A%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%A7%81%E9%92%A5/</guid>
      <description>&lt;p&gt;SSL 证书X.509 是国际电信联盟电信标准化部门（ ITU-T ）为公钥基础设施制定的一个标准，这个标准包含了公钥证书的标准格式。
一个 X.509 证书（简称 SSL 证书）实际上就是一个经过编码的 ASN.1( Abstract Syntax Notation One,抽象语法表示法／1 ）格式的电子文档。 ASN.1 既是一个标准，也是一种表示法，它描述了表示电信以及
计算机网络数据的规则和结构。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang基础学习整理</title>
      <link>https://auuunya.github.io/post/2018-2-28-golang%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86/</link>
      <pubDate>Wed, 28 Feb 2018 13:20:36 +0800</pubDate>
      
      <guid>https://auuunya.github.io/post/2018-2-28-golang%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Golang上传文件到七牛云</title>
      <link>https://auuunya.github.io/post/2018-2-27-golang%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0%E4%B8%83%E7%89%9B%E4%BA%91%E5%82%A8%E5%AD%98/</link>
      <pubDate>Tue, 27 Feb 2018 18:20:36 +0800</pubDate>
      
      <guid>https://auuunya.github.io/post/2018-2-27-golang%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0%E4%B8%83%E7%89%9B%E4%BA%91%E5%82%A8%E5%AD%98/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;最近老大说要在网站的后台里做一个OSS配置，后台写好，图片直接上传到云储存里面，小生不才，查资料看文章，改了N多BUG之后才做了一个基本的上传系统,下面是一些在敲代码中经历的BUG或者对一些方法的见解&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>Go语言扫描硬盘查找自己需要的文件</title>
      <link>https://auuunya.github.io/post/2018-2-9-go%E8%AF%AD%E8%A8%80%E6%89%AB%E6%8F%8F%E7%A1%AC%E7%9B%98%E6%9F%A5%E6%89%BE%E8%87%AA%E5%B7%B1%E9%9C%80%E8%A6%81%E7%9A%84%E6%96%87%E4%BB%B6/</link>
      <pubDate>Fri, 09 Feb 2018 16:05:36 +0800</pubDate>
      
      <guid>https://auuunya.github.io/post/2018-2-9-go%E8%AF%AD%E8%A8%80%E6%89%AB%E6%8F%8F%E7%A1%AC%E7%9B%98%E6%9F%A5%E6%89%BE%E8%87%AA%E5%B7%B1%E9%9C%80%E8%A6%81%E7%9A%84%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;h3 id=&#34;用到的包&#34;&gt;用到的包&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://books.studygolang.com/The-Golang-Standard-Library-by-Example/chapter02/02.4.html&#34;&gt;regexp&lt;/a&gt;
&lt;a href=&#34;https://books.studygolang.com/The-Golang-Standard-Library-by-Example/chapter06/06.1.html&#34;&gt;os&lt;/a&gt;
&lt;a href=&#34;https://books.studygolang.com/The-Golang-Standard-Library-by-Example/chapter02/02.1.html&#34;&gt;string&lt;/a&gt;
&lt;a href=&#34;https://books.studygolang.com/The-Golang-Standard-Library-by-Example/chapter02/02.3.html&#34;&gt;strconv&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang文件夹遍历Demo</title>
      <link>https://auuunya.github.io/post/2018-2-9-go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6%E9%81%8D%E5%8E%86demo/</link>
      <pubDate>Fri, 09 Feb 2018 12:05:36 +0800</pubDate>
      
      <guid>https://auuunya.github.io/post/2018-2-9-go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6%E9%81%8D%E5%8E%86demo/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
